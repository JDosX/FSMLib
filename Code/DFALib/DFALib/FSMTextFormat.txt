Example of a DFA text format:

FSM FloatDetector {
   <# + denotes initial state
      * denotes accepting state
      # denotes sing line comment
      <# \#\> denotes a multi-line comment
   #>

   +State1 -> { "string transition" -> State2 }
              { /regex transition/  -> State3, State4 }
              { `[str] == 3`        -> State4, State5, State6 }

  +*State2 -> etc....
}


Name_Of_FSM_2 {
	...
}


























// how to determine where different parts of the syntax start and end?
// do we want python style (lines and indentations matter)
// or C# style, where lines and scopes are specified using brackets


---- TO INTERPRET STRINGS -----

// go from starting " to ending ", making sure to skip over \"
// TODO: Look at escape characters and their impact

---- TO INTERPRET REGEX -----

// go from starting / to ending /, making sure to skip over escape slashes

----- TO INTERPRET FNSCRIPT -----

// the fnscript expression is enclosed in `backticks`